{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","isError","useState","name","email","phone","language","agreement","formState","setFormState","isNameError","isEmailError","isPhoneError","isLanguageError","errorFormState","setErrorFormState","getErrorMsg","text","className","handleKeyPress","event","key","handleSubmit","preventDefault","newErrorFormState","match","includes","value","setTimeout","alert","onSubmit","href","type","placeholder","onChange","target","onKeyPress","mask","classNamePrefix","options","label","console","log","id","checked","htmlFor","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ad0cc56.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { useState } from \"react\";\nimport Select from \"react-select\";\nimport MaskedInput from \"react-text-mask\";\nimport \"./App.scss\";\n\nfunction App() {\n  let isError = false;\n\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    language: \"\",\n    agreement: false,\n  });\n  const { name, email, phone, language, agreement } = formState;\n\n  const [errorFormState, setErrorFormState] = useState({\n    isNameError: false,\n    isEmailError: false,\n    isPhoneError: false,\n    isLanguageError: false,\n  });\n  const {\n    isNameError,\n    isEmailError,\n    isPhoneError,\n    isLanguageError,\n  } = errorFormState;\n\n  const mask = [\n    \"+\",\n    \"7\",\n    \"(\",\n    /[0-9]/,\n    /[0-9]/,\n    /[0-9]/,\n    \")\",\n    /[0-9]/,\n    /[0-9]/,\n    /[0-9]/,\n    \"-\",\n    /[0-9]/,\n    /[0-9]/,\n    \"-\",\n    /[0-9]/,\n    /[0-9]/,\n  ];\n  const selectOptions = [\n    { value: \"russian\", label: \"Русский\" },\n    { value: \"english\", label: \"Английский\" },\n    { value: \"mandarin\", label: \"Китайский\" },\n    { value: \"spanish\", label: \"Испанский\" },\n  ];\n\n  const getErrorMsg = (text) => {\n    return <div className=\"error-msg\">{text}</div>;\n  };\n\n  const handleChangeName = (event) => {\n    setFormState({ ...formState, name: event.target.value });\n  };\n  const handleChangePhone = (event) => {\n    setFormState({ ...formState, phone: event.target.value });\n  };\n  const handleChangeEmail = (event) => {\n    setFormState({ ...formState, email: event.target.value });\n  };\n  const handleChangeLanguage = (event) => {\n    console.log(event);\n    setFormState({\n      ...formState,\n      language: event ? { value: event.value, label: event.label } : \"\",\n    });\n  };\n  const handleChangeAgreement = (event) => {\n    setFormState({ ...formState, agreement: !agreement });\n  };\n\n  const handleKeyPress = (event) => {\n    event.key === \"Enter\" && handleSubmit(event);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let newErrorFormState = { ...errorFormState };\n    isError = false;\n\n    //Проверка ФИО\n    if (name === \"\" || name.match(/^[a-z а-яё -]+$/i) === null) {\n      isError = true;\n      newErrorFormState.isNameError = true;\n    } else {\n      if (isNameError) newErrorFormState.isNameError = false;\n    }\n\n    //Проверка емейла\n    //В случае с проверкой емейла - проще всего проверять на наличие @ и всё\n    if (email === \"\" || email.match(/[^@]+@[^@]+/i) === null) {\n      isError = true;\n      newErrorFormState.isEmailError = true;\n    } else {\n      if (isEmailError) newErrorFormState.isEmailError = false;\n    }\n\n    //Проверка телефона\n    if (phone === \"\" || phone.includes(\"_\")) {\n      isError = true;\n      newErrorFormState.isPhoneError = true;\n    } else {\n      if (isPhoneError) newErrorFormState.isPhoneError = false;\n    }\n\n    //Проверка языка\n    if (language.value === \"\" || language === \"\") {\n      isError = true;\n      newErrorFormState.isLanguageError = true;\n    } else {\n      if (isLanguageError) newErrorFormState.isLanguageError = false;\n    }\n\n    setErrorFormState(newErrorFormState);\n\n    if (!isError) {\n      setTimeout(() => alert(\"Успех\"), 0); //Чтобы интерфейс успел обновиться\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"form-wrapper\">\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <h2 className=\"registration-title\">Регистрация</h2>\n          <h3 className=\"login-title\">\n            Уже есть аккаунт?{\" \"}\n            <a href=\"#\" className=\"login-link link\">\n              Войти\n            </a>\n          </h3>\n\n          <label className=\"name-label label\" name=\"name\">\n            Имя\n            <input\n              className=\"name-input input\"\n              type=\"text\"\n              placeholder=\"Введите ваше имя\"\n              value={name}\n              onChange={handleChangeName}\n            />\n            {isNameError ? getErrorMsg(\"Введено не корректное значение\") : \"\"}\n          </label>\n\n          <label className=\"email-label label\" name=\"email\">\n            Email\n            <input\n              className=\"email-input input\"\n              type=\"text\"\n              placeholder=\"Введите ваш email\"\n              onKeyPress={handleKeyPress}\n              value={email}\n              onChange={handleChangeEmail}\n            />\n            {isEmailError ? getErrorMsg(\"Введено не корректное значение\") : \"\"}\n          </label>\n\n          <label className=\"phone-label label\" name=\"phone\">\n            Телефон\n            <MaskedInput\n              className=\"phone-input input\"\n              type=\"text\"\n              name=\"phone\"\n              mask={mask}\n              placeholder=\"+7(999)123-45-78\"\n              onKeyPress={handleKeyPress}\n              value={phone}\n              onChange={handleChangePhone}\n            />\n            {isPhoneError ? getErrorMsg(\"Введено не корректное значение\") : \"\"}\n          </label>\n\n          <label className=\"language-label label\" name=\"language\">\n            Язык\n            <Select\n              className=\"select-container\"\n              classNamePrefix=\"select\"\n              options={selectOptions}\n              placeholder={\"Язык\"}\n              onKeyPress={handleKeyPress}\n              value={language}\n              onChange={handleChangeLanguage}\n            />\n            {isLanguageError ? getErrorMsg(\"Выберите язык\") : \"\"}\n          </label>\n\n          <div className=\"checkbox-wrapper\">\n            <input\n              type=\"checkbox\"\n              className=\"agreement-checkbox checkbox\"\n              name=\"agreement\"\n              id=\"agreement-checkbox\"\n              onKeyPress={handleKeyPress}\n              checked={agreement}\n              onChange={handleChangeAgreement}\n            />\n            <label\n              htmlFor=\"agreement-checkbox\"\n              className=\"agreement-label label\"\n            >\n              {\"Принимаю \"}\n              <a href=\"#\" className=\"agreement-link link\">\n                условия\n              </a>\n              {\" использования\"}\n            </label>\n          </div>\n\n          <button\n            className={\n              agreement\n                ? \"register-btn btn\"\n                : \"register-btn register-btn--disabled btn\"\n            }\n            onKeyPress={handleKeyPress}\n            disabled={!agreement}\n          >\n            Зарегистрироваться\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}